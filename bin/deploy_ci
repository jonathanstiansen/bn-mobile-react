#! /usr/bin/env bash
set -e # exit entire script when command exits with non-zero status

ENVIRONMENT=$1

# inject sentry auth token into app.json
[ -z "$SENTRY_AUTH_TOKEN" ] && echo 'Missing required environment vars.' && exit 1
sed -i .bak "s/__SECRET_SENTRY_AUTH_TOKEN__/$SENTRY_AUTH_TOKEN/g" app.json

# Install dependencies
npm ci

# Publish `production` release
npx expo publish --release-channel $ENVIRONMENT --non-interactive

# Start building standalone android build using `$ENVIRONMENT` release channel
npx expo build:android --release-channel $ENVIRONMENT --non-interactive --no-publish

# Download the built android binary
curl -o app.apk "$(npx expo url:apk --non-interactive)"

# Ask Keith for the JSON key. Store this one directory below the app, and DO NOT ADD TO GIT
fastlane supply --track 'beta' --json_key './.creds/google-deploy-key.json' --package_name "com.bigneon.mobile" --apk "app.apk" --skip_upload_metadata --skip_upload_images --skip_upload_screenshots

# Start building standalone android build using `$ENVIRONMENT` release channel
npx expo build:ios --release-channel $ENVIRONMENT --non-interactive --no-publish

# Download the artifact to current directory as `app.ipa`
curl -o app.ipa "$(npx expo url:ipa --non-interactive)"

# In your bash profile, you'll need to set:
# export DELIVER_USERNAME=apple developer username
# export DELIVER_PASSWORD=apple developer password
# export FASTLANE_ITC_TEAM_ID=119447135

# Use fastlane to upload your current standalone iOS build to test flight on iTunes Connect.
fastlane deliver --verbose --ipa "app.ipa" --skip_screenshots --skip_metadata --username $APPLE_USERNAME
